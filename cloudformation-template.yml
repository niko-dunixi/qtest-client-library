AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Pipeline to build, test, and deploy the qtest-client-library JVM artifact to Maven Central

Parameters:
  GitHubPersonalAccessToken:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/qtest-client-library/github-personal-access-token'
    NoEcho: true
  GitHubOwner:
    Type: String
    Default: paul-nelson-baker
  GitHubRepo:
    Type: String
    Default: qtest-client-library
  GitHubReleaseBranch:
    Type: String
    Default: master
  GitHubSnapshotBranch:
    Type: String
    Default: snapshot
  IntegrationTestSubdomain:
    Type: String
    Default: '/qtest-client-library/integration-test/subdomain'
  IntegrationTestUsername:
    Type: String
    Default: '/qtest-client-library/integration-test/username'
  IntegrationTestPassword:
    Type: String
    Default: '/qtest-client-library/integration-test/password'

Resources:
  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::StackName}-artifact-bucket'

  PipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AWS::StackName}-service-role'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub '${AWS::StackName}-integration-test-params-policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: 'Allow'
              Action: 'ssm:GetParametersByPath'
              Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/qtest-client-library/integration-test/*'

  SnapshotPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${AWS::StackName}-snapshot-pipeline'
      RoleArn: !GetAtt PipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      RestartExecutionOnUpdate: true
      Stages:
        - Name: !Sub 'github_${GitHubRepo}_${GitHubSnapshotBranch}'
          Actions:
            - Name: !Sub 'github_${GitHubRepo}_${GitHubSnapshotBranch}'
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                PollForSourceChanges: false
                Branch: !Ref GitHubSnapshotBranch
                OAuthToken: !Ref GitHubPersonalAccessToken
              OutputArtifacts:
                - Name: snapshot-source-artifact
        - Name: !Sub 'build_${GitHubRepo}_${GitHubSnapshotBranch}'
          Actions:
            - Name: !Sub 'build_${GitHubRepo}_${GitHubSnapshotBranch}'
              InputArtifacts:
                - Name: snapshot-source-artifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref SnapshotCodebuildProject
  SnapshotCodebuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${AWS::StackName}-snapshot-build-project'
      ServiceRole: !Ref PipelineServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - mvn clean
            build:
              commands:
                - mvn install
            post_build:
              commands:
                - mvn deploy
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/java:openjdk-8
        EnvironmentVariables:
          - Name: QTEST_SUBDOMAIN
            Type: PARAMETER_STORE
            Value: !Ref IntegrationTestSubdomain
          - Name: QTEST_USER
            Type: PARAMETER_STORE
            Value: !Ref IntegrationTestUsername
          - Name: QTEST_PASS
            Type: PARAMETER_STORE
            Value: !Ref IntegrationTestPassword


#  ReleasePipeline:
#    Type: AWS::CodePipeline::Pipeline
#    Properties:
#      Name: "QTest-Client-Library Release Pipeline"
#      Stages:
#      - Name: "Source"
#        Actions:
#        - ActionTypeId:
#            Category: Source
#            Owner: ThirdParty
#            Version: 1
#            Provider: GitHub
#        - Configuration:
#            Category: Source
#            Owner: !Ref GitHubOwner
#            Repo: !Ref GitHubRepo
#            Branch: !Ref GitHubReleaseBranch
#            OAuthToken: !Ref GitHubPersonalAccessToken
#        - OutputArtifacts:
#          - Name: SourceArtifact
#      - Name: "Build Release"
#        Actions:
#        - ActionTypeId:
#            Category: Build
#            Owner: AWS
#            Version: 1
#            Provider: CodeBuild
#        - InputArifacts:
#          - Name: SourceArtifact